{"ast":null,"code":"var _s = $RefreshSig$(),\n    _jsxFileName = \"C:\\\\Users\\\\AVIA\\\\Desktop\\\\youTubeNew\\\\myTubeFull\\\\client\\\\src\\\\state\\\\YouTube.store.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, createContext, useContext, useEffect } from \"react\";\nimport { findFromLocalStorageArray } from \"../service/utils\";\nconst YouTubeStore = /*#__PURE__*/createContext();\nconst {\n  Provider\n} = YouTubeStore;\n\nconst useStore = () => {\n  _s();\n\n  const context = useContext(YouTubeStore);\n\n  if (!context) {\n    throw new Error(`useStore must be used within a Provider`);\n  }\n\n  return context;\n};\n\n_s(useStore, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nconst YouTubeProvider = ({\n  children\n}) => {\n  _s2();\n\n  let [selectedVideo, setSelectedVideo] = useState(null);\n  let [videos, setvideos] = useState([]);\n  let [catagories, setCatagories] = useState(JSON.parse(localStorage.getItem(\"YTcatagories\")) || []);\n  let [selectedCategoryID, setSelectedCategoryID] = useState(null);\n  let [listVideos, setListVideos] = useState([]);\n  const [userProfile, setUserProfile] = useState(JSON.parse(localStorage.getItem(\"YTuserProfile\")) || {});\n  const [userToken, setUserToken] = useState(localStorage.getItem(\"YTuserToken\") || null);\n  const [isConnected, setIsConnected] = useState(JSON.parse(localStorage.getItem(\"YTisConnected\")) || false);\n  useEffect(() => {\n    localStorage.setItem(\"YTisConnected\", JSON.stringify(isConnected));\n\n    if (isConnected) {\n      localStorage.setItem(\"YTuserProfile\", JSON.stringify(userProfile));\n      localStorage.setItem(\"YTcatagories\", JSON.stringify(catagories));\n      localStorage.setItem(\"YTuserToken\", userToken);\n      const basicCategory = findFromLocalStorageArray(\"YTcatagories\", \"cat_name\", \"You Tube links\");\n\n      if (basicCategory) {\n        setSelectedCategoryID(basicCategory._id);\n      } else {\n        createCategory(userToken, {\n          cat_name: \"You Tube links\",\n          videos: []\n        });\n      }\n    } else {\n      localStorage.clear();\n    }\n  }, [isConnected, userProfile, catagories, userToken]);\n  console.log(catagories); // state = values to display\n\n  const state = {\n    selectedVideo,\n    videos,\n    catagories,\n    selectedCategoryID,\n    listVideos,\n    isConnected,\n    userProfile,\n    userToken\n  }; // actions = callbacks to invoke\n\n  const actions = {\n    setSelectedVideo,\n    setvideos,\n    setCatagories,\n    setSelectedCategoryID,\n    setListVideos,\n    setUserToken,\n    setIsConnected,\n    setUserProfile\n  };\n  return /*#__PURE__*/React.createElement(Provider, {\n    value: { ...state,\n      ...actions\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 10\n    }\n  }, children);\n};\n\n_s2(YouTubeProvider, \"Fatek9IuT0v5EFMGeqFdNfI2AUM=\");\n\n_c = YouTubeProvider;\nexport { YouTubeProvider, useStore };\n\nvar _c;\n\n$RefreshReg$(_c, \"YouTubeProvider\");","map":{"version":3,"sources":["C:/Users/AVIA/Desktop/youTubeNew/myTubeFull/client/src/state/YouTube.store.js"],"names":["React","useState","createContext","useContext","useEffect","findFromLocalStorageArray","YouTubeStore","Provider","useStore","context","Error","YouTubeProvider","children","selectedVideo","setSelectedVideo","videos","setvideos","catagories","setCatagories","JSON","parse","localStorage","getItem","selectedCategoryID","setSelectedCategoryID","listVideos","setListVideos","userProfile","setUserProfile","userToken","setUserToken","isConnected","setIsConnected","setItem","stringify","basicCategory","_id","createCategory","cat_name","clear","console","log","state","actions"],"mappings":"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","sourcesContent":["import React, { useState, createContext, useContext, useEffect } from \"react\";\r\n import {findFromLocalStorageArray}  from \"../service/utils\"    \r\nconst YouTubeStore = createContext();\r\nconst { Provider } = YouTubeStore;\r\n\r\nconst useStore = () => {\r\n  const context = useContext(YouTubeStore);\r\n  if (!context) {\r\n    throw new Error(`useStore must be used within a Provider`);\r\n  }\r\n  return context;\r\n};\r\n\r\nconst YouTubeProvider = ({ children }) => {\r\n  let [selectedVideo, setSelectedVideo] = useState(null);\r\n  let [videos, setvideos] = useState([]);\r\n  let [catagories, setCatagories] = useState(\r\n    JSON.parse(localStorage.getItem(\"YTcatagories\")) || []\r\n  );\r\n  let [selectedCategoryID, setSelectedCategoryID] = useState(null);\r\n  let [listVideos, setListVideos] = useState([]);\r\n  const [userProfile, setUserProfile] = useState(\r\n    JSON.parse(localStorage.getItem(\"YTuserProfile\")) || {}\r\n  );\r\n  const [userToken, setUserToken] = useState(\r\n    localStorage.getItem(\"YTuserToken\") || null\r\n  );\r\n  const [isConnected, setIsConnected] = useState(\r\n    JSON.parse(localStorage.getItem(\"YTisConnected\")) || false\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"YTisConnected\", JSON.stringify(isConnected));\r\n    if (isConnected) {\r\n      localStorage.setItem(\"YTuserProfile\", JSON.stringify(userProfile));\r\n      localStorage.setItem(\"YTcatagories\", JSON.stringify(catagories));\r\n      localStorage.setItem(\"YTuserToken\", userToken);\r\n      const basicCategory=findFromLocalStorageArray(\"YTcatagories\",\"cat_name\",\"You Tube links\")\r\n      if(basicCategory){\r\n        setSelectedCategoryID(basicCategory._id);\r\n      }\r\n      else{\r\n        createCategory(userToken, {\r\n          cat_name: \"You Tube links\",\r\n          videos: [],\r\n        });\r\n      }\r\n      \r\n    } else {\r\n      localStorage.clear();\r\n    }\r\n  }, [isConnected, userProfile, catagories, userToken]);\r\n\r\n  \r\n\r\n  \r\n  console.log(catagories);\r\n\r\n  // state = values to display\r\n  const state = {\r\n    selectedVideo,\r\n    videos,\r\n    catagories,\r\n    selectedCategoryID,\r\n    listVideos,\r\n    isConnected,\r\n    userProfile,\r\n    userToken,\r\n  };\r\n  // actions = callbacks to invoke\r\n  const actions = {\r\n    setSelectedVideo,\r\n    setvideos,\r\n    setCatagories,\r\n    setSelectedCategoryID,\r\n    setListVideos,\r\n    setUserToken,\r\n    setIsConnected,\r\n    setUserProfile,\r\n  };\r\n\r\n  return <Provider value={{ ...state, ...actions }}>{children}</Provider>;\r\n};\r\n\r\nexport { YouTubeProvider, useStore };\r\n"]},"metadata":{},"sourceType":"module"}