{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"C:\\\\Users\\\\AVIA\\\\Desktop\\\\youTubeNew\\\\myTubeFull\\\\client\\\\src\\\\view\\\\VideoList.jsx\";\nimport React from \"react\";\nimport { BACKGROUND } from \"../styles/colors\";\nimport { createList } from \"../service/fetchApi\";\nimport Video from \"./Video\";\n\nconst VideoList = ({\n  catagories,\n  setSelectedVideo,\n  setCatagories,\n  userToken,\n  isConnected\n}) => {\n  const saveJson = () => {\n    if (isConnected) {\n      try {\n        createList(userToken, catagories);\n        alert(\"success! the file been create and sended to your mail and download folder\");\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return React.createElement(ListDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, catagories.length > 0 && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, catagories.map((cat, inx) => {\n    return React.createElement(\"div\", {\n      key: cat + inx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(H, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, cat.videos.length > 0 ? cat.cat_name : \"\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, cat.videos.map((vid, indx) => {\n      return React.createElement(Video, Object.assign({\n        key: vid.snippet.title + indx\n      }, {\n        vid,\n        cat,\n        indx,\n        userToken,\n        catagories,\n        setCatagories,\n        setSelectedVideo\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    })));\n  }))), React.createElement(\"div\", {\n    className: \"buttonDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: isConnected ? \"\" : \"disable\",\n    onClick: saveJson,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"save the list\")));\n};\n\nexport default VideoList;\n\nconst ListDiv = _styled.div.withConfig({\n  displayName: \"VideoList__ListDiv\",\n  componentId: \"h8y1n6-0\"\n})([\"width:500px;padding:0.1rem;display:flex;flex-direction:column;\"]);\n\nconst List = _styled.div.withConfig({\n  displayName: \"VideoList__List\",\n  componentId: \"h8y1n6-1\"\n})([\"height:48vh;background-color:\", \";margin-bottom:10px;font-size:12px;padding:20px;@media only screen and (max-width:414px){div{display:flex;flex-direction:column;div{margin-bottom:20px;}}}\"], BACKGROUND);\n\nconst H = _styled.h2.withConfig({\n  displayName: \"VideoList__H\",\n  componentId: \"h8y1n6-2\"\n})([\"font-weight:bold;margin:10px 0 4px 0;font-size:16px;@media only screen and (max-width:414px){margin:10px 0 0px 0;font-size:16px;}\"]);","map":{"version":3,"sources":["C:/Users/AVIA/Desktop/youTubeNew/myTubeFull/client/src/view/VideoList.jsx"],"names":["React","BACKGROUND","createList","Video","VideoList","catagories","setSelectedVideo","setCatagories","userToken","isConnected","saveJson","alert","error","console","log","length","map","cat","inx","videos","cat_name","vid","indx","snippet","title","ListDiv","styled","div","List","H","h2"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,UADiB;AAEjBC,EAAAA,gBAFiB;AAGjBC,EAAAA,aAHiB;AAIjBC,EAAAA,SAJiB;AAKjBC,EAAAA;AALiB,CAAD,KAMZ;AACJ,QAAMC,QAAQ,GAAG,MAAM;AACrB,QAAID,WAAJ,EAAiB;AACf,UAAI;AACFP,QAAAA,UAAU,CAACM,SAAD,EAAYH,UAAZ,CAAV;AACAM,QAAAA,KAAK,CACH,2EADG,CAAL;AAGD,OALD,CAKE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;AACF,GAXD;;AAaA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,UAAU,CAACU,MAAX,GAAoB,CAApB,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,UAAU,CAACW,GAAX,CAAe,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC5B,WACE;AAAK,MAAA,GAAG,EAAED,GAAG,GAAGC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,CAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,GAAG,CAACE,MAAJ,CAAWJ,MAAX,GAAoB,CAApB,GAAwBE,GAAG,CAACG,QAA5B,GAAuC,EAA3C,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,GAAG,CAACE,MAAJ,CAAWH,GAAX,CAAe,CAACK,GAAD,EAAMC,IAAN,KAAe;AAC7B,aACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAED,GAAG,CAACE,OAAJ,CAAYC,KAAZ,GAAkBF;AAA9B,SACM;AACFD,QAAAA,GADE;AAEFJ,QAAAA,GAFE;AAGFK,QAAAA,IAHE;AAIFd,QAAAA,SAJE;AAKFH,QAAAA,UALE;AAMFE,QAAAA,aANE;AAOFD,QAAAA;AAPE,OADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAaD,KAdA,CADH,CAFF,CADF;AAsBD,GAvBA,CADH,CAFJ,CADF,EA+BE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAEG,WAAW,GAAG,EAAH,GAAQ,SAAtC;AAAiD,IAAA,OAAO,EAAEC,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CA/BF,CADF;AAuCD,CA3DD;;AA6DA,eAAeN,SAAf;;AAEA,MAAMqB,OAAO,GAAGC,OAAM,CAACC,GAAV;AAAA;AAAA;AAAA,sEAAb;;AAMA,MAAMC,IAAI,GAAGF,OAAM,CAACC,GAAV;AAAA;AAAA;AAAA,oMAEY1B,UAFZ,CAAV;;AAiBA,MAAM4B,CAAC,GAAGH,OAAM,CAACI,EAAV;AAAA;AAAA;AAAA,yIAAP","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { BACKGROUND } from \"../styles/colors\";\r\nimport { createList } from \"../service/fetchApi\";\r\nimport Video from \"./Video\";\r\n\r\nconst VideoList = ({\r\n  catagories,\r\n  setSelectedVideo,\r\n  setCatagories,\r\n  userToken,\r\n  isConnected,\r\n}) => {\r\n  const saveJson = () => {\r\n    if (isConnected) {\r\n      try {\r\n        createList(userToken, catagories);\r\n        alert(\r\n          \"success! the file been create and sended to your mail and download folder\"\r\n        );\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListDiv>\r\n      <List>\r\n        {catagories.length > 0 && (\r\n          <div>\r\n            {catagories.map((cat, inx) => {\r\n              return (\r\n                <div key={cat + inx}>\r\n                  <H>{cat.videos.length > 0 ? cat.cat_name : \"\"}</H>\r\n                  <ul>\r\n                    {cat.videos.map((vid, indx) => {\r\n                      return (\r\n                        <Video key={vid.snippet.title+indx}\r\n                          {...{\r\n                            vid,\r\n                            cat,\r\n                            indx,\r\n                            userToken,\r\n                            catagories,\r\n                            setCatagories,\r\n                            setSelectedVideo,\r\n                          }}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </List>\r\n      <div className=\"buttonDiv\">\r\n        <button className={isConnected ? \"\" : \"disable\"} onClick={saveJson}>\r\n          save the list\r\n        </button>\r\n      </div>\r\n    </ListDiv>\r\n  );\r\n};\r\n\r\nexport default VideoList;\r\n\r\nconst ListDiv = styled.div`\r\n  width: 500px;\r\n  padding: 0.1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst List = styled.div`\r\n  height: 48vh;\r\n  background-color: ${BACKGROUND};\r\n  margin-bottom: 10px;\r\n  font-size: 12px;\r\n  padding: 20px;\r\n  @media only screen and (max-width: 414px) {\r\n    div {\r\n      display: flex;\r\n      flex-direction: column;\r\n      div {\r\n        margin-bottom: 20px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst H = styled.h2`\r\n  font-weight: bold;\r\n  margin: 10px 0 4px 0;\r\n  font-size: 16px;\r\n  @media only screen and (max-width: 414px) {\r\n    margin: 10px 0 0px 0;\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\n"]},"metadata":{},"sourceType":"module"}