{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\AVIA\\\\Desktop\\\\youTubeNew\\\\myTubeFull\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\AVIA\\\\Desktop\\\\youTubeNew\\\\myTubeFull\\\\client\\\\src\\\\view\\\\VideoScreen.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport YouTube from \"react-youtube\";\nimport { isMobile } from \"react-device-detect\";\nimport { updateCategory } from \"../service/fetchApi\";\n\nconst VideoScreen = ({\n  selectedVideo,\n  setCatagories,\n  selectedCategory,\n  catagories,\n  userToken,\n  isConnected\n}) => {\n  const checkvh = () => {\n    if (window.innerHeight < 600) return 250;\n    if (window.innerHeight < 750) return 300;\n    if (window.innerHeight < 1080) return 360;\n    if (window.innerHeight < 2000) return 400;\n  };\n\n  console.log(window.innerHeight);\n  const opts = {\n    height: isMobile ? \"200\" : checkvh(),\n    width: isMobile ? \"300\" : \"640\",\n    playerVars: {\n      autoplay: 1\n    }\n  };\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        disabledBt = _useState2[0],\n        setdisabledBt = _useState2[1];\n\n  useEffect(() => {\n    setdisabledBt(selectedVideo && isConnected);\n  }, [selectedVideo, isConnected]);\n\n  const addVideo = (video, selectedCategoryID) => {\n    console.log(\"selectedCategoryName\", selectedCategoryID);\n    let catObj = catagories.find(existsCategory => existsCategory._id === selectedCategoryID);\n    let catagoriesArray = catagories.filter(existsCategory => existsCategory._id !== selectedCategoryID);\n    catObj.videos.push(video);\n    setCatagories([catObj, ...catagoriesArray]);\n    updateCategory(catObj, userToken);\n  };\n\n  return React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Screen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, selectedVideo && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, selectedVideo.snippet.title), React.createElement(YouTube, {\n    videoId: selectedVideo.id.videoId,\n    opts: opts,\n    onReady: YouTube._onReady,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"buttonDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    disabled: !disabledBt,\n    onClick: () => addVideo(selectedVideo, selectedCategory),\n    className: isConnected ? \"\" : \"disable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"add video\")));\n};\n\nexport default VideoScreen;\nconst Box = styled.div`\n  padding: 0.1rem;\n\n  @media only screen and (max-width: 414px) {\n    height: 54vh;\n    padding: 10px 16px;\n    width: 93%;\n  }\n  @media only screen and (max-width: 360px) {\n    height: 54vh;\n    padding: 10px 16px;\n    width: 90%;\n  }\n`;\nconst Screen = styled.div`\n  width: 640px;\n  height: 48vh;\n  margin-bottom: 10px;\n  font-size: 12px;\n  padding: 20px;\n  @media only screen and (max-width: 414px) {\n    width: 100%;\n    height: 35vh;\n    padding: 0;\n  }\n`;\nconst Title = styled.h3`\n  text-transform: capitalize;\n  font-size: 1rem;\n  line-height: 1.2rem;\n  margin-bottom: 11px;\n  font-weight: 600;\n  @media only screen and (max-width: 414px) {\n    font-size: 0.65rem;\n    line-height: 1rem;\n  }\n`;","map":{"version":3,"sources":["C:/Users/AVIA/Desktop/youTubeNew/myTubeFull/client/src/view/VideoScreen.jsx"],"names":["React","useState","useEffect","styled","YouTube","isMobile","updateCategory","VideoScreen","selectedVideo","setCatagories","selectedCategory","catagories","userToken","isConnected","checkvh","window","innerHeight","console","log","opts","height","width","playerVars","autoplay","disabledBt","setdisabledBt","addVideo","video","selectedCategoryID","catObj","find","existsCategory","_id","catagoriesArray","filter","videos","push","snippet","title","id","videoId","_onReady","Box","div","Screen","Title","h3"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,cAAT,QAA+B,qBAA/B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,aADmB;AAEnBC,EAAAA,aAFmB;AAGnBC,EAAAA,gBAHmB;AAInBC,EAAAA,UAJmB;AAKnBC,EAAAA,SALmB;AAMnBC,EAAAA;AANmB,CAAD,KAOd;AACJ,QAAMC,OAAO,GAAG,MAAM;AACpB,QAAIC,MAAM,CAACC,WAAP,GAAqB,GAAzB,EAA8B,OAAO,GAAP;AAC9B,QAAID,MAAM,CAACC,WAAP,GAAqB,GAAzB,EAA8B,OAAO,GAAP;AAC9B,QAAID,MAAM,CAACC,WAAP,GAAqB,IAAzB,EAA+B,OAAO,GAAP;AAC/B,QAAID,MAAM,CAACC,WAAP,GAAqB,IAAzB,EAA+B,OAAO,GAAP;AAChC,GALD;;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACC,WAAnB;AACA,QAAMG,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAEf,QAAQ,GAAG,KAAH,GAAWS,OAAO,EADvB;AAEXO,IAAAA,KAAK,EAAEhB,QAAQ,GAAG,KAAH,GAAW,KAFf;AAGXiB,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE;AADA;AAHD,GAAb;;AARI,oBAegCtB,QAAQ,CAAC,KAAD,CAfxC;AAAA;AAAA,QAeGuB,UAfH;AAAA,QAeeC,aAff;;AAiBJvB,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,aAAa,CAACjB,aAAa,IAAIK,WAAlB,CAAb;AACD,GAFQ,EAEN,CAACL,aAAD,EAAgBK,WAAhB,CAFM,CAAT;;AAIA,QAAMa,QAAQ,GAAG,CAACC,KAAD,EAAQC,kBAAR,KAA+B;AAC9CX,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCU,kBAApC;AAEA,QAAIC,MAAM,GAAGlB,UAAU,CAACmB,IAAX,CACVC,cAAD,IAAoBA,cAAc,CAACC,GAAf,KAAuBJ,kBADhC,CAAb;AAGA,QAAIK,eAAe,GAAGtB,UAAU,CAACuB,MAAX,CACnBH,cAAD,IAAoBA,cAAc,CAACC,GAAf,KAAuBJ,kBADvB,CAAtB;AAGAC,IAAAA,MAAM,CAACM,MAAP,CAAcC,IAAd,CAAmBT,KAAnB;AACAlB,IAAAA,aAAa,CAAC,CAACoB,MAAD,EAAS,GAAGI,eAAZ,CAAD,CAAb;AACA3B,IAAAA,cAAc,CAACuB,MAAD,EAASjB,SAAT,CAAd;AACD,GAZD;;AAcA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,aAAa,IACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,aAAa,CAAC6B,OAAd,CAAsBC,KAA9B,CADF,EAEE,oBAAC,OAAD;AACE,IAAA,OAAO,EAAE9B,aAAa,CAAC+B,EAAd,CAAiBC,OAD5B;AAEE,IAAA,IAAI,EAAErB,IAFR;AAGE,IAAA,OAAO,EAAEf,OAAO,CAACqC,QAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFJ,CADF,EAaE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ,EAAE,CAACjB,UADb;AAEE,IAAA,OAAO,EAAE,MAAME,QAAQ,CAAClB,aAAD,EAAgBE,gBAAhB,CAFzB;AAGE,IAAA,SAAS,EAAEG,WAAW,GAAG,EAAH,GAAQ,SAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAbF,CADF;AAyBD,CAnED;;AAqEA,eAAeN,WAAf;AAEA,MAAMmC,GAAG,GAAGvC,MAAM,CAACwC,GAAI;;;;;;;;;;;;;CAAvB;AAeA,MAAMC,MAAM,GAAGzC,MAAM,CAACwC,GAAI;;;;;;;;;;;CAA1B;AAaA,MAAME,KAAK,GAAG1C,MAAM,CAAC2C,EAAG;;;;;;;;;;CAAxB","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport YouTube from \"react-youtube\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { updateCategory } from \"../service/fetchApi\";\r\n\r\nconst VideoScreen = ({\r\n  selectedVideo,\r\n  setCatagories,\r\n  selectedCategory,\r\n  catagories,\r\n  userToken,\r\n  isConnected,\r\n}) => {\r\n  const checkvh = () => {\r\n    if (window.innerHeight < 600) return 250;\r\n    if (window.innerHeight < 750) return 300;\r\n    if (window.innerHeight < 1080) return 360;\r\n    if (window.innerHeight < 2000) return 400;\r\n  };\r\n  console.log(window.innerHeight);\r\n  const opts = {\r\n    height: isMobile ? \"200\" : checkvh(),\r\n    width: isMobile ? \"300\" : \"640\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  const [disabledBt, setdisabledBt] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setdisabledBt(selectedVideo && isConnected);\r\n  }, [selectedVideo, isConnected]);\r\n\r\n  const addVideo = (video, selectedCategoryID) => {\r\n    console.log(\"selectedCategoryName\", selectedCategoryID);\r\n\r\n    let catObj = catagories.find(\r\n      (existsCategory) => existsCategory._id === selectedCategoryID\r\n    );\r\n    let catagoriesArray = catagories.filter(\r\n      (existsCategory) => existsCategory._id !== selectedCategoryID\r\n    );\r\n    catObj.videos.push(video);\r\n    setCatagories([catObj, ...catagoriesArray]);\r\n    updateCategory(catObj, userToken);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Screen>\r\n        {selectedVideo && (\r\n          <div>\r\n            <Title>{selectedVideo.snippet.title}</Title>\r\n            <YouTube\r\n              videoId={selectedVideo.id.videoId}\r\n              opts={opts}\r\n              onReady={YouTube._onReady}\r\n            />\r\n          </div>\r\n        )}\r\n      </Screen>\r\n      <div className=\"buttonDiv\">\r\n        <button\r\n          disabled={!disabledBt}\r\n          onClick={() => addVideo(selectedVideo, selectedCategory)}\r\n          className={isConnected ? \"\" : \"disable\"}\r\n        >\r\n          add video\r\n        </button>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default VideoScreen;\r\n\r\nconst Box = styled.div`\r\n  padding: 0.1rem;\r\n\r\n  @media only screen and (max-width: 414px) {\r\n    height: 54vh;\r\n    padding: 10px 16px;\r\n    width: 93%;\r\n  }\r\n  @media only screen and (max-width: 360px) {\r\n    height: 54vh;\r\n    padding: 10px 16px;\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nconst Screen = styled.div`\r\n  width: 640px;\r\n  height: 48vh;\r\n  margin-bottom: 10px;\r\n  font-size: 12px;\r\n  padding: 20px;\r\n  @media only screen and (max-width: 414px) {\r\n    width: 100%;\r\n    height: 35vh;\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  text-transform: capitalize;\r\n  font-size: 1rem;\r\n  line-height: 1.2rem;\r\n  margin-bottom: 11px;\r\n  font-weight: 600;\r\n  @media only screen and (max-width: 414px) {\r\n    font-size: 0.65rem;\r\n    line-height: 1rem;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}