{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/AVIA/Desktop/youTubeNew/myTubeFull/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _toConsumableArray from\"C:/Users/AVIA/Desktop/youTubeNew/myTubeFull/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/AVIA/Desktop/youTubeNew/myTubeFull/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject,_templateObject2,_templateObject3;import React,{useState,useEffect}from\"react\";import styled from\"styled-components\";import YouTube from\"react-youtube\";import{isMobile}from\"react-device-detect\";import{updateCategory}from\"../service/fetchApi\";var VideoScreen=function VideoScreen(_ref){var selectedVideo=_ref.selectedVideo,setCatagories=_ref.setCatagories,selectedCategory=_ref.selectedCategory,catagories=_ref.catagories,userToken=_ref.userToken,isConnected=_ref.isConnected;var checkvh=function checkvh(){if(window.innerHeight<600)return 250;if(window.innerHeight<750)return 300;if(window.innerHeight<1080)return 360;if(window.innerHeight<2000)return 400;};console.log(window.innerHeight);var opts={height:isMobile?\"200\":checkvh(),width:isMobile?\"300\":\"640\",playerVars:{autoplay:1}};var _useState=useState(false),_useState2=_slicedToArray(_useState,2),disabledBt=_useState2[0],setdisabledBt=_useState2[1];useEffect(function(){setdisabledBt(selectedVideo&&isConnected);},[selectedVideo,isConnected]);var addVideo=function addVideo(video,selectedCategoryID){console.log(\"selectedCategoryName\",selectedCategoryID);var catObj=catagories.find(function(existsCategory){return existsCategory._id===selectedCategoryID;});var catagoriesArray=catagories.filter(function(existsCategory){return existsCategory._id!==selectedCategoryID;});catObj.videos.push(video);setCatagories([catObj].concat(_toConsumableArray(catagoriesArray)));updateCategory(catObj,userToken);};return/*#__PURE__*/React.createElement(Box,null,/*#__PURE__*/React.createElement(Screen,null,selectedVideo&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Title,null,selectedVideo.snippet.title),/*#__PURE__*/React.createElement(YouTube,{videoId:selectedVideo.id.videoId,opts:opts,onReady:YouTube._onReady}))),/*#__PURE__*/React.createElement(\"div\",{className:\"buttonDiv\"},/*#__PURE__*/React.createElement(\"button\",{disabled:!disabledBt,onClick:function onClick(){return addVideo(selectedVideo,selectedCategory);},className:isConnected?\"\":\"disable\"},\"add video\")));};export default VideoScreen;var Box=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding: 0.1rem;\\n\\n  @media only screen and (max-width: 414px) {\\n    height: 54vh;\\n    padding: 10px 16px;\\n    width: 93%;\\n  }\\n  @media only screen and (max-width: 360px) {\\n    height: 54vh;\\n    padding: 10px 16px;\\n    width: 90%;\\n  }\\n\"])));var Screen=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  width: 640px;\\n  height: 48vh;\\n  margin-bottom: 10px;\\n  font-size: 12px;\\n  padding: 20px;\\n  @media only screen and (max-width: 414px) {\\n    width: 100%;\\n    height: 35vh;\\n    padding: 0;\\n  }\\n\"])));var Title=styled.h3(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  text-transform: capitalize;\\n  font-size: 1rem;\\n  line-height: 1.2rem;\\n  margin-bottom: 11px;\\n  font-weight: 600;\\n  @media only screen and (max-width: 414px) {\\n    font-size: 0.65rem;\\n    line-height: 1rem;\\n  }\\n\"])));","map":{"version":3,"sources":["C:/Users/AVIA/Desktop/youTubeNew/myTubeFull/client/src/view/VideoScreen.jsx"],"names":["React","useState","useEffect","styled","YouTube","isMobile","updateCategory","VideoScreen","selectedVideo","setCatagories","selectedCategory","catagories","userToken","isConnected","checkvh","window","innerHeight","console","log","opts","height","width","playerVars","autoplay","disabledBt","setdisabledBt","addVideo","video","selectedCategoryID","catObj","find","existsCategory","_id","catagoriesArray","filter","videos","push","snippet","title","id","videoId","_onReady","Box","div","Screen","Title","h3"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport YouTube from \"react-youtube\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { updateCategory } from \"../service/fetchApi\";\r\n\r\nconst VideoScreen = ({\r\n  selectedVideo,\r\n  setCatagories,\r\n  selectedCategory,\r\n  catagories,\r\n  userToken,\r\n  isConnected,\r\n}) => {\r\n  const checkvh = () => {\r\n    if (window.innerHeight < 600) return 250;\r\n    if (window.innerHeight < 750) return 300;\r\n    if (window.innerHeight < 1080) return 360;\r\n    if (window.innerHeight < 2000) return 400;\r\n  };\r\n  console.log(window.innerHeight);\r\n  const opts = {\r\n    height: isMobile ? \"200\" : checkvh(),\r\n    width: isMobile ? \"300\" : \"640\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  const [disabledBt, setdisabledBt] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setdisabledBt(selectedVideo && isConnected);\r\n  }, [selectedVideo, isConnected]);\r\n\r\n  const addVideo = (video, selectedCategoryID) => {\r\n    console.log(\"selectedCategoryName\", selectedCategoryID);\r\n\r\n    let catObj = catagories.find(\r\n      (existsCategory) => existsCategory._id === selectedCategoryID\r\n    );\r\n    let catagoriesArray = catagories.filter(\r\n      (existsCategory) => existsCategory._id !== selectedCategoryID\r\n    );\r\n    catObj.videos.push(video);\r\n    setCatagories([catObj, ...catagoriesArray]);\r\n    updateCategory(catObj, userToken);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Screen>\r\n        {selectedVideo && (\r\n          <div>\r\n            <Title>{selectedVideo.snippet.title}</Title>\r\n            <YouTube\r\n              videoId={selectedVideo.id.videoId}\r\n              opts={opts}\r\n              onReady={YouTube._onReady}\r\n            />\r\n          </div>\r\n        )}\r\n      </Screen>\r\n      <div className=\"buttonDiv\">\r\n        <button\r\n          disabled={!disabledBt}\r\n          onClick={() => addVideo(selectedVideo, selectedCategory)}\r\n          className={isConnected ? \"\" : \"disable\"}\r\n        >\r\n          add video\r\n        </button>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default VideoScreen;\r\n\r\nconst Box = styled.div`\r\n  padding: 0.1rem;\r\n\r\n  @media only screen and (max-width: 414px) {\r\n    height: 54vh;\r\n    padding: 10px 16px;\r\n    width: 93%;\r\n  }\r\n  @media only screen and (max-width: 360px) {\r\n    height: 54vh;\r\n    padding: 10px 16px;\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nconst Screen = styled.div`\r\n  width: 640px;\r\n  height: 48vh;\r\n  margin-bottom: 10px;\r\n  font-size: 12px;\r\n  padding: 20px;\r\n  @media only screen and (max-width: 414px) {\r\n    width: 100%;\r\n    height: 35vh;\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  text-transform: capitalize;\r\n  font-size: 1rem;\r\n  line-height: 1.2rem;\r\n  margin-bottom: 11px;\r\n  font-weight: 600;\r\n  @media only screen and (max-width: 414px) {\r\n    font-size: 0.65rem;\r\n    line-height: 1rem;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}