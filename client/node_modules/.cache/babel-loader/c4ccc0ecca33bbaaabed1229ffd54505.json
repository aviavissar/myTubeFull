{"ast":null,"code":"var _s = $RefreshSig$(),\n    _jsxFileName = \"C:\\\\Users\\\\AVIA\\\\Desktop\\\\youTubeNew\\\\myTubeFull\\\\client\\\\src\\\\state\\\\YouTube.store.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, createContext, useContext, useEffect } from \"react\";\nconst YouTubeStore = /*#__PURE__*/createContext();\nconst {\n  Provider\n} = YouTubeStore;\n\nconst useStore = () => {\n  _s();\n\n  const context = useContext(YouTubeStore);\n\n  if (!context) {\n    throw new Error(`useStore must be used within a Provider`);\n  }\n\n  return context;\n};\n\n_s(useStore, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nconst YouTubeProvider = ({\n  children\n}) => {\n  _s2();\n\n  let [selectedVideo, setSelectedVideo] = useState(null);\n  let [videos, setvideos] = useState([]);\n  let [catagories, setCatagories] = useState(JSON.parse(localStorage.getItem('YTcatagories')) || [{\n    cat_name: 'YTcatagories',\n    videos: []\n  }]);\n  let [selectedCategory, setSelectedCategory] = useState(\"You Tube links\");\n  let [listVideos, setListVideos] = useState([]);\n  const [userProfile, setUserProfile] = useState(JSON.parse(localStorage.getItem('YTuserProfile')) || {});\n  const [userToken, setUserToken] = useState(localStorage.getItem('YTuserToken') || null);\n  const [isConnected, setIsConnected] = useState(JSON.parse(localStorage.getItem('YTisConnected')) || false);\n  useEffect(() => {\n    localStorage.setItem(\"YTisConnected\", JSON.stringify(isConnected));\n\n    if (isConnected) {\n      localStorage.setItem(\"YTuserProfile\", JSON.stringify(userProfile));\n      localStorage.setItem(\"YTcatagories\", JSON.stringify(catagories));\n      localStorage.setItem(\"YTuserToken\", userToken);\n    } else {\n      localStorage.clear();\n    }\n  }, [isConnected, userProfile, catagories, userToken]);\n  console.log(catagories); // state = values to display\n\n  const state = {\n    selectedVideo,\n    videos,\n    catagories,\n    selectedCategory,\n    listVideos,\n    isConnected,\n    userProfile,\n    userToken\n  }; // actions = callbacks to invoke\n\n  const actions = {\n    setSelectedVideo,\n    setvideos,\n    setCatagories,\n    setSelectedCategory,\n    setListVideos,\n    setUserToken,\n    setIsConnected,\n    setUserProfile\n  };\n  return /*#__PURE__*/React.createElement(Provider, {\n    value: { ...state,\n      ...actions\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }\n  }, children);\n};\n\n_s2(YouTubeProvider, \"FgBHk/xrCgD3vfeuHli+ts/qT3Y=\");\n\n_c = YouTubeProvider;\nexport { YouTubeProvider, useStore };\n\nvar _c;\n\n$RefreshReg$(_c, \"YouTubeProvider\");","map":{"version":3,"sources":["C:/Users/AVIA/Desktop/youTubeNew/myTubeFull/client/src/state/YouTube.store.js"],"names":["React","useState","createContext","useContext","useEffect","YouTubeStore","Provider","useStore","context","Error","YouTubeProvider","children","selectedVideo","setSelectedVideo","videos","setvideos","catagories","setCatagories","JSON","parse","localStorage","getItem","cat_name","selectedCategory","setSelectedCategory","listVideos","setListVideos","userProfile","setUserProfile","userToken","setUserToken","isConnected","setIsConnected","setItem","stringify","clear","console","log","state","actions"],"mappings":"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","sourcesContent":["import React, { useState, createContext, useContext,useEffect} from \"react\";\r\n\r\nconst YouTubeStore = createContext();\r\nconst { Provider } = YouTubeStore;\r\n\r\nconst useStore = () => {\r\n  const context = useContext(YouTubeStore);\r\n  if (!context) {\r\n    throw new Error(`useStore must be used within a Provider`);\r\n  }\r\n  return context;\r\n};\r\n\r\nconst YouTubeProvider = ({ children }) => {\r\n  let [selectedVideo, setSelectedVideo] = useState(null);\r\n  let [videos, setvideos] = useState([]);\r\n  let [catagories, setCatagories] = useState(JSON.parse(localStorage.getItem('YTcatagories')) || [{\r\n    cat_name: 'YTcatagories',\r\n    videos: [],\r\n  }]);\r\n  let [selectedCategory, setSelectedCategory] = useState(\"You Tube links\");\r\n  let [listVideos, setListVideos] = useState([]);\r\n  const [userProfile, setUserProfile] = useState(JSON.parse(localStorage.getItem('YTuserProfile')) || {});\r\n  const [userToken, setUserToken] = useState(localStorage.getItem('YTuserToken') || null);\r\n  const [isConnected, setIsConnected] = useState(JSON.parse( localStorage.getItem('YTisConnected')) || false);\r\n  \r\n  useEffect(() => {\r\n    localStorage.setItem(\"YTisConnected\", JSON.stringify(isConnected));\r\n    if(isConnected){\r\n      localStorage.setItem(\"YTuserProfile\", JSON.stringify(userProfile));\r\n      localStorage.setItem(\"YTcatagories\", JSON.stringify(catagories)); \r\n       localStorage.setItem(\"YTuserToken\", userToken);\r\n    }else{\r\n      localStorage.clear()\r\n    }\r\n\r\n  }, [isConnected,userProfile,catagories,userToken]);\r\n\r\n\r\n\r\n  console.log(catagories);\r\n\r\n  // state = values to display\r\n  const state = {\r\n    selectedVideo,\r\n    videos,\r\n    catagories,\r\n    selectedCategory,\r\n    listVideos,\r\n    isConnected,\r\n    userProfile,\r\n    userToken,\r\n  };\r\n  // actions = callbacks to invoke\r\n  const actions = {\r\n    setSelectedVideo,\r\n    setvideos,\r\n    setCatagories,\r\n    setSelectedCategory,\r\n    setListVideos,\r\n    setUserToken,\r\n    setIsConnected,\r\n    setUserProfile,\r\n  };\r\n  \r\n  return <Provider value={{ ...state, ...actions }}>{children}</Provider>;\r\n};\r\n\r\nexport { YouTubeProvider, useStore };\r\n"]},"metadata":{},"sourceType":"module"}