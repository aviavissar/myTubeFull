{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AVIA\\\\Desktop\\\\youTubeNew\\\\myTubeFull\\\\client\\\\src\\\\view\\\\SignIn.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { createUser } from \"../service/fetchApi\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { red } from \"@material-ui/core/colors\";\nimport schema from \"../service/yupSchema\";\nimport { Formik, Form } from \"formik\";\nimport { updateProfile } from \"../service/fetchApi\";\n\nconst SignIn = ({\n  doLogIn,\n  isConnected,\n  setUserProfile,\n  title,\n  userProfile = {},\n  userToken\n}) => {\n  _s();\n\n  const passInput = useRef(null);\n  const passConfInput = useRef(null);\n  const mailInput = useRef(null);\n  const fnameInput = useRef(null);\n  const lnameInput = useRef(null);\n  const [open, setOpen] = useState(false);\n  const classes = useStyles();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const doSignUp = async (email, password, fname, lname) => {\n    if (!isConnected) {\n      await createUser(email, password, fname, lname);\n      doLogIn(email, password);\n      handleClose();\n    } else {\n      if (password === \"\") {\n        password = prevState => ({ ...prevState.userProfile.password\n        });\n      }\n\n      const newProfile = await updateProfile({\n        email,\n        password,\n        fname,\n        lname\n      }, userToken);\n      console.log(newProfile);\n      await setUserProfile(newProfile);\n      handleClose();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: \"editbt\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    className: classes.root,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \" \", title, \" details\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      fname: isConnected ? userProfile.fname : \"\",\n      lname: isConnected ? userProfile.lname : \"\",\n      email: isConnected ? userProfile.email : \"\",\n      password: isConnected ? userProfile.email : \"\",\n      passwordConfirmation: isConnected ? userProfile.email : \"\"\n    },\n    validationSchema: schema,\n    onSubmit: (values, actions) => {\n      console.log(fnameInput.current.value);\n      doSignUp(mailInput.current.value, passInput.current.value, fnameInput.current.value, lnameInput.current.value).catch(e => {\n        console.log(e);\n        actions.setFieldError(\"emailerr\", e.message);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, ({\n    errors,\n    handleChange,\n    touched\n  }) => /*#__PURE__*/React.createElement(Form, {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"normal\",\n    error: errors.fname && touched.fname,\n    id: \"fname\",\n    defaultValue: isConnected ? userProfile.fname : \"\",\n    name: \"fname\",\n    label: \"first name\",\n    type: \"text\",\n    size: \"small\",\n    onChange: handleChange,\n    inputRef: fnameInput,\n    className: classes.MuiFormControl,\n    helperText: errors.fname && touched.fname ? errors.fname : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"normal\",\n    error: errors.lname && touched.lname,\n    id: \"lname\",\n    label: \"last name\",\n    type: \"text\",\n    size: \"small\",\n    name: \"lname\",\n    defaultValue: isConnected ? userProfile.lname : \"\",\n    onChange: handleChange,\n    inputRef: lnameInput,\n    className: classes.MuiFormControl,\n    helperText: errors.lname && touched.lname ? errors.lname : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    error: errors.email && touched.email,\n    margin: \"normal\",\n    id: \"email\",\n    label: \"Email Address\",\n    type: \"email\",\n    name: \"email\",\n    defaultValue: !isConnected ? userProfile.email : \"\",\n    size: \"small\",\n    onChange: handleChange,\n    inputRef: mailInput,\n    className: isConnected ? \"none\" : classes.MuiFormControl,\n    helperText: (errors.email && touched.email ? errors.email : null) || errors.emailerr ? errors.emailerr : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    error: errors.password && touched.password,\n    margin: \"normal\",\n    id: \"password\",\n    label: \"password\",\n    type: \"text\",\n    name: \"password\",\n    onChange: handleChange,\n    inputRef: passInput,\n    size: \"small\",\n    className: classes.MuiFormControl,\n    helperText: errors.password && touched.password ? errors.password : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"normal\",\n    id: \"passwordConfirmation\",\n    label: \"passwordConfirmation\",\n    type: \"text\",\n    name: \"passwordConfirmation\",\n    onChange: handleChange,\n    inputRef: passConfInput,\n    size: \"small\",\n    className: classes.MuiFormControl,\n    error: errors.passwordConfirmation && touched.passwordConfirmation,\n    helperText: errors.passwordConfirmation && touched.passwordConfirmation ? errors.passwordConfirmation : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, \"ok\"))))));\n};\n\n_s(SignIn, \"7srD4aE5BgaVWzDu3dCNEm0Rui4=\", false, function () {\n  return [useStyles];\n});\n\n_c = SignIn;\nexport default SignIn;\nconst useStyles = makeStyles({\n  \"MuiDialog-paperScrollPaper\": {\n    \" max-height\": \"500px\"\n  },\n  root: {\n    display: \"flex\"\n  },\n  details: {\n    display: \"flex\",\n    margin: \"10px\",\n    width: \"300px\",\n    \"flex-direction\": \"column\"\n  },\n  logoutDiv: {\n    width: \"300px\",\n    display: \"flex\",\n    \"justify-content\": \"space-around\"\n  },\n  MuiFormControl: {\n    margin: \"16px\",\n    \"&$helperText\": {\n      color: red\n    }\n  }\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/AVIA/Desktop/youTubeNew/myTubeFull/client/src/view/SignIn.jsx"],"names":["React","useState","useRef","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","createUser","makeStyles","red","schema","Formik","Form","updateProfile","SignIn","doLogIn","isConnected","setUserProfile","title","userProfile","userToken","passInput","passConfInput","mailInput","fnameInput","lnameInput","open","setOpen","classes","useStyles","handleClickOpen","handleClose","doSignUp","email","password","fname","lname","prevState","newProfile","console","log","root","passwordConfirmation","values","actions","current","value","catch","e","setFieldError","message","errors","handleChange","touched","form","details","MuiFormControl","emailerr","display","margin","width","logoutDiv","color"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { createUser } from \"../service/fetchApi\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport schema from \"../service/yupSchema\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { updateProfile } from \"../service/fetchApi\";\r\nconst SignIn = ({\r\n  doLogIn,\r\n  isConnected,\r\n  setUserProfile,\r\n  title,\r\n  userProfile = {},\r\n  userToken,\r\n}) => {\r\n  const passInput = useRef(null);\r\n  const passConfInput = useRef(null);\r\n  const mailInput = useRef(null);\r\n  const fnameInput = useRef(null);\r\n  const lnameInput = useRef(null);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const doSignUp = async (email, password, fname, lname) => {\r\n    if (!isConnected) {\r\n      await createUser(email, password, fname, lname);\r\n      doLogIn(email, password);\r\n      handleClose();\r\n    } else {\r\n      if (password === \"\") {\r\n        password = (prevState) => ({ ...prevState.userProfile.password });\r\n      }\r\n      \r\n      const newProfile = await updateProfile(\r\n        { email, password, fname, lname },\r\n        userToken\r\n      );\r\n      console.log(newProfile);\r\n      await setUserProfile(newProfile);\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"outlined\"\r\n        className='editbt'\r\n        color=\"primary\"\r\n        onClick={handleClickOpen}\r\n      >\r\n        {title}\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        className={classes.root}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\"> {title} details</DialogTitle>\r\n        <Formik\r\n          initialValues={{\r\n            fname:isConnected ? userProfile.fname : \"\",\r\n            lname: isConnected ? userProfile.lname : \"\",\r\n            email: isConnected ? userProfile.email : \"\",\r\n            password: isConnected ? userProfile.email : \"\",\r\n            passwordConfirmation: isConnected ? userProfile.email : \"\",\r\n          }}\r\n          validationSchema={schema}\r\n          onSubmit={(values, actions) => {\r\n            console.log( fnameInput.current.value);\r\n            doSignUp(\r\n              mailInput.current.value,\r\n              passInput.current.value,\r\n              fnameInput.current.value,\r\n              lnameInput.current.value\r\n            ).catch((e) => {\r\n              console.log(e);\r\n              actions.setFieldError(\"emailerr\", e.message);\r\n            });\r\n          }}\r\n        >\r\n          {({ errors, handleChange, touched }) => (\r\n            <Form className={classes.form}>\r\n              <DialogContent className={classes.root}>\r\n                <div className={classes.details}>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"normal\"\r\n                    error={errors.fname && touched.fname}\r\n                    id=\"fname\"\r\n                    defaultValue={isConnected ? userProfile.fname : \"\"}\r\n                    name=\"fname\"\r\n                    label=\"first name\"\r\n                    type=\"text\"\r\n                    size=\"small\"\r\n                    onChange={handleChange}\r\n                    inputRef={fnameInput}\r\n                    className={classes.MuiFormControl}\r\n                    helperText={\r\n                      errors.fname && touched.fname ? errors.fname : null\r\n                    }\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"normal\"\r\n                    error={errors.lname && touched.lname}\r\n                    id=\"lname\"\r\n                    label=\"last name\"\r\n                    type=\"text\"\r\n                    size=\"small\"\r\n                    name=\"lname\"\r\n                    defaultValue={isConnected ? userProfile.lname : \"\"}\r\n                    onChange={handleChange}\r\n                    inputRef={lnameInput}\r\n                    className={classes.MuiFormControl}\r\n                    helperText={\r\n                      errors.lname && touched.lname ? errors.lname : null\r\n                    }\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    error={errors.email && touched.email}\r\n                    margin=\"normal\"\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    defaultValue={!isConnected ? userProfile.email : \"\"}\r\n                    size=\"small\"\r\n                    onChange={handleChange}\r\n                    inputRef={mailInput}\r\n                    className={isConnected ? \"none\" : classes.MuiFormControl}\r\n                    helperText={\r\n                      (errors.email && touched.email ? errors.email : null) ||\r\n                      errors.emailerr\r\n                        ? errors.emailerr\r\n                        : null\r\n                    }\r\n                  />\r\n\r\n                  <TextField\r\n                    autoFocus\r\n                    error={errors.password && touched.password}\r\n                    margin=\"normal\"\r\n                    id=\"password\"\r\n                    label=\"password\"\r\n                    type=\"text\"\r\n                    name=\"password\"\r\n                    onChange={handleChange}\r\n                    inputRef={passInput}\r\n                    size=\"small\"\r\n                    className={classes.MuiFormControl}\r\n                    helperText={\r\n                      errors.password && touched.password\r\n                        ? errors.password\r\n                        : null\r\n                    }\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"normal\"\r\n                    id=\"passwordConfirmation\"\r\n                    label=\"passwordConfirmation\"\r\n                    type=\"text\"\r\n                    name=\"passwordConfirmation\"\r\n                    onChange={handleChange}\r\n                    inputRef={passConfInput}\r\n                    size=\"small\"\r\n                    className={ classes.MuiFormControl}\r\n                    error={\r\n                      errors.passwordConfirmation &&\r\n                      touched.passwordConfirmation\r\n                    }\r\n                    helperText={\r\n                      errors.passwordConfirmation &&\r\n                      touched.passwordConfirmation\r\n                        ? errors.passwordConfirmation\r\n                        : null\r\n                    }\r\n                  />\r\n                </div>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button type=\"submit\" color=\"primary\">\r\n                  ok\r\n                </Button>\r\n              </DialogActions>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n\r\nconst useStyles = makeStyles({\r\n  \"MuiDialog-paperScrollPaper\": {\r\n    \" max-height\": \"500px\",\r\n  },\r\n \r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n\r\n  details: {\r\n    display: \"flex\",\r\n    margin: \"10px\",\r\n    width: \"300px\",\r\n    \"flex-direction\": \"column\",\r\n  },\r\n  logoutDiv: {\r\n    width: \"300px\",\r\n    display: \"flex\",\r\n    \"justify-content\": \"space-around\",\r\n  },\r\n\r\n  MuiFormControl: {\r\n    margin: \"16px\",\r\n    \"&$helperText\": {\r\n      color: red,\r\n    },\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}