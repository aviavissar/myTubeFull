{"ast":null,"code":"var _s = $RefreshSig$(),\n    _jsxFileName = \"C:\\\\Users\\\\AVIA\\\\Desktop\\\\youTubeNew\\\\myTubeFull\\\\client\\\\src\\\\state\\\\YouTube.store.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, createContext, useContext, useEffect } from \"react\";\nconst YouTubeStore = /*#__PURE__*/createContext();\nconst {\n  Provider\n} = YouTubeStore;\n\nconst useStore = () => {\n  _s();\n\n  const context = useContext(YouTubeStore);\n\n  if (!context) {\n    throw new Error(`useStore must be used within a Provider`);\n  }\n\n  return context;\n};\n\n_s(useStore, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nconst YouTubeProvider = ({\n  children\n}) => {\n  _s2();\n\n  let [selectedVideo, setSelectedVideo] = useState(null);\n  let [videos, setvideos] = useState([]);\n  let [catagories, setCatagories] = useState(JSON.parse(localStorage.getItem(\"YTcatagories\")) || []);\n  let [selectedCategoryID, setSelectedCategoryID] = useState(null);\n  let [listVideos, setListVideos] = useState([]);\n  const [userProfile, setUserProfile] = useState(JSON.parse(localStorage.getItem(\"YTuserProfile\")) || {});\n  const [userToken, setUserToken] = useState(localStorage.getItem(\"YTuserToken\") || null);\n  const [isConnected, setIsConnected] = useState(JSON.parse(localStorage.getItem(\"YTisConnected\")) || false);\n  useEffect(() => {\n    localStorage.setItem(\"YTisConnected\", JSON.stringify(isConnected));\n\n    if (isConnected) {\n      localStorage.setItem(\"YTuserProfile\", JSON.stringify(userProfile));\n      localStorage.setItem(\"YTcatagories\", JSON.stringify(catagories));\n      localStorage.setItem(\"YTuserToken\", userToken);\n      setSelectedCategoryID(catagories[0]._id);\n    } else {\n      localStorage.clear();\n    }\n  }, [isConnected, userProfile, catagories, userToken]);\n\n  const findFromLoclStorgeArray = (storageName, key, value) => {\n    const tmpArray = JSON.parse(localStorage.getItem(storageName));\n    const resoult = tmpArray.find(itm => itm[key] == value);\n\n    if (resoult === undefined) {\n      return false;\n    }\n\n    return resoulte;\n  };\n\n  findFromLoclStorge(\"YTuserProfile\", \"fname\", \"You Tube links\");\n  console.log(catagories); // state = values to display\n\n  const state = {\n    selectedVideo,\n    videos,\n    catagories,\n    selectedCategoryID,\n    listVideos,\n    isConnected,\n    userProfile,\n    userToken\n  }; // actions = callbacks to invoke\n\n  const actions = {\n    setSelectedVideo,\n    setvideos,\n    setCatagories,\n    setSelectedCategoryID,\n    setListVideos,\n    setUserToken,\n    setIsConnected,\n    setUserProfile\n  };\n  return /*#__PURE__*/React.createElement(Provider, {\n    value: { ...state,\n      ...actions\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 10\n    }\n  }, children);\n};\n\n_s2(YouTubeProvider, \"Fatek9IuT0v5EFMGeqFdNfI2AUM=\");\n\n_c = YouTubeProvider;\nexport { YouTubeProvider, useStore };\n\nvar _c;\n\n$RefreshReg$(_c, \"YouTubeProvider\");","map":{"version":3,"sources":["C:/Users/AVIA/Desktop/youTubeNew/myTubeFull/client/src/state/YouTube.store.js"],"names":["React","useState","createContext","useContext","useEffect","YouTubeStore","Provider","useStore","context","Error","YouTubeProvider","children","selectedVideo","setSelectedVideo","videos","setvideos","catagories","setCatagories","JSON","parse","localStorage","getItem","selectedCategoryID","setSelectedCategoryID","listVideos","setListVideos","userProfile","setUserProfile","userToken","setUserToken","isConnected","setIsConnected","setItem","stringify","_id","clear","findFromLoclStorgeArray","storageName","key","value","tmpArray","resoult","find","itm","undefined","resoulte","findFromLoclStorge","console","log","state","actions"],"mappings":"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","sourcesContent":["import React, { useState, createContext, useContext, useEffect } from \"react\";\r\n\r\nconst YouTubeStore = createContext();\r\nconst { Provider } = YouTubeStore;\r\n\r\nconst useStore = () => {\r\n  const context = useContext(YouTubeStore);\r\n  if (!context) {\r\n    throw new Error(`useStore must be used within a Provider`);\r\n  }\r\n  return context;\r\n};\r\n\r\nconst YouTubeProvider = ({ children }) => {\r\n  let [selectedVideo, setSelectedVideo] = useState(null);\r\n  let [videos, setvideos] = useState([]);\r\n  let [catagories, setCatagories] = useState(\r\n    JSON.parse(localStorage.getItem(\"YTcatagories\")) || []\r\n  );\r\n  let [selectedCategoryID, setSelectedCategoryID] = useState(null);\r\n  let [listVideos, setListVideos] = useState([]);\r\n  const [userProfile, setUserProfile] = useState(\r\n    JSON.parse(localStorage.getItem(\"YTuserProfile\")) || {}\r\n  );\r\n  const [userToken, setUserToken] = useState(\r\n    localStorage.getItem(\"YTuserToken\") || null\r\n  );\r\n  const [isConnected, setIsConnected] = useState(\r\n    JSON.parse(localStorage.getItem(\"YTisConnected\")) || false\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"YTisConnected\", JSON.stringify(isConnected));\r\n    if (isConnected) {\r\n      localStorage.setItem(\"YTuserProfile\", JSON.stringify(userProfile));\r\n      localStorage.setItem(\"YTcatagories\", JSON.stringify(catagories));\r\n      localStorage.setItem(\"YTuserToken\", userToken);\r\n      setSelectedCategoryID(catagories[0]._id);\r\n    } else {\r\n      localStorage.clear();\r\n    }\r\n  }, [isConnected, userProfile, catagories, userToken]);\r\n\r\n  const findFromLoclStorgeArray = (storageName, key,value) => {\r\n    const tmpArray = JSON.parse(localStorage.getItem(storageName));\r\n    const resoult = tmpArray.find((itm) => itm[key] == value);\r\n       if (resoult === undefined) {\r\n      return false;\r\n    }\r\n    return resoulte;\r\n  };\r\n\r\n  findFromLoclStorge(\"YTuserProfile\",\"fname\", \"You Tube links\");\r\n  console.log(catagories);\r\n\r\n  // state = values to display\r\n  const state = {\r\n    selectedVideo,\r\n    videos,\r\n    catagories,\r\n    selectedCategoryID,\r\n    listVideos,\r\n    isConnected,\r\n    userProfile,\r\n    userToken,\r\n  };\r\n  // actions = callbacks to invoke\r\n  const actions = {\r\n    setSelectedVideo,\r\n    setvideos,\r\n    setCatagories,\r\n    setSelectedCategoryID,\r\n    setListVideos,\r\n    setUserToken,\r\n    setIsConnected,\r\n    setUserProfile,\r\n  };\r\n\r\n  return <Provider value={{ ...state, ...actions }}>{children}</Provider>;\r\n};\r\n\r\nexport { YouTubeProvider, useStore };\r\n"]},"metadata":{},"sourceType":"module"}