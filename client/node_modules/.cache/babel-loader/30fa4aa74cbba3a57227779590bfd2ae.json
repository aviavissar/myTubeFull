{"ast":null,"code":"import axios1 from \"axios\";\nlet axios = axios1.default;\nexport const login = async (email, password) => {\n  try {\n    console.log(email + \",\" + password);\n    const response = await axios.post(\"/users/login\", {\n      email,\n      password\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    if (response.status === 200) {\n      if (response.data === 400) {\n        return new Error(\"Unable to find your mail please sign in\");\n      } else if (response.data === 401) {\n        return new Error(\"wrong password try again\");\n      }\n\n      return response;\n    }\n  } catch (e) {\n    console.log(e.message);\n  }\n};\nexport const logout = async userToken => {\n  try {\n    const response = await axios.post(\"/users/logout\", {}, {\n      headers: {\n        Authorization: userToken\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\" client error\" + error);\n  }\n};\nexport const createUser = async (email, password, fname, lname) => {\n  try {\n    const response = await axios({\n      method: \"post\",\n      url: \"/users\",\n      headers: {},\n      data: {\n        fname,\n        lname,\n        email,\n        password\n      }\n    }).catch(e => {\n      console.log(\"error\", e.response);\n\n      if (e.response.data.code === 11000) {\n        throw new Error(\"this email already exist\");\n      }\n    });\n    console.log(\"createftch\", response);\n    return response;\n  } catch (error) {\n    console.log(\"createftcherr\", error.message);\n    throw error;\n  }\n};\nexport const updateProfile = async (profile, userToken) => {\n  const {\n    password,\n    fname = \"my defaultName\",\n    lname\n  } = profile;\n\n  try {\n    console.log(\"response\", profile);\n    const response = await axios({\n      method: \"patch\",\n      url: \"/users/me\",\n      data: {\n        fname,\n        lname,\n        password\n      },\n      headers: {\n        Authorization: userToken\n      }\n    });\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\" client error\");\n  }\n};\n/****catagories */\n\nexport const getCatagories = async userToken => {\n  try {\n    const response = await axios({\n      method: \"get\",\n      url: \"/catagories\",\n      headers: {\n        Authorization: userToken\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const createCategory = async (userToken, category) => {\n  try {\n    const response = await axios({\n      method: \"post\",\n      url: \"/catagories\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Authorization: userToken\n      },\n      data: category\n    });\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const updateCategory = async (editCat, userToken) => {\n  const {\n    _id,\n    cat_name,\n    videos\n  } = editCat;\n\n  try {\n    console.log(\"response\", editCat);\n    const response = await axios({\n      method: \"patch\",\n      url: `/catagories/${_id}`,\n      data: {\n        cat_name,\n        videos\n      },\n      headers: {\n        Authorization: userToken\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\" claint error\");\n  }\n};\nexport const deleteCategory = async (userToken, id) => {\n  try {\n    await axios.delete(`/catagories/${id}`, {\n      headers: {\n        Authorization: userToken\n      }\n    });\n  } catch (error) {\n    console.error(\" exios claint error\" + error);\n  }\n};\nexport const createList = async (userToken, catagories) => {\n  try {\n    const response = await axios({\n      method: \"post\",\n      url: \"/catagories/list\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Authorization: userToken\n      },\n      data: catagories\n    });\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/AVIA/Desktop/youTubeNew/myTubeFull/client/src/service/fetchApi.js"],"names":["axios1","axios","default","login","email","password","console","log","response","post","headers","status","data","Error","e","message","logout","userToken","Authorization","error","createUser","fname","lname","method","url","catch","code","updateProfile","profile","getCatagories","createCategory","category","updateCategory","editCat","_id","cat_name","videos","deleteCategory","id","delete","createList","catagories"],"mappings":"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","sourcesContent":["import axios1 from \"axios\";\r\nlet axios = axios1.default;\r\n\r\nexport const login = async (email, password) => {\r\n  try {\r\n    console.log(email + \",\" + password);\r\n    const response = await axios.post(\r\n      \"/users/login\",\r\n      { email, password },\r\n      {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      }\r\n    );\r\n    if (response.status === 200) {\r\n      if (response.data === 400) {\r\n        return new Error(\"Unable to find your mail please sign in\");\r\n      } else if (response.data === 401) {\r\n        return new Error(\"wrong password try again\");\r\n      }\r\n\r\n      return response;\r\n    }\r\n  } catch (e) {\r\n    console.log(e.message);\r\n  }\r\n};\r\n\r\nexport const logout = async (userToken) => {\r\n  try {\r\n    const response = await axios.post(\r\n      \"/users/logout\",\r\n      {},\r\n      {\r\n        headers: {\r\n          Authorization: userToken,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\" client error\" + error);\r\n  }\r\n};\r\n\r\nexport const createUser = async (email, password, fname, lname) => {\r\n  try {\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: \"/users\",\r\n      headers: {},\r\n      data: {\r\n        fname,\r\n        lname,\r\n        email,\r\n        password,\r\n      },\r\n    }).catch((e) => {\r\n      console.log(\"error\", e.response);\r\n      if (e.response.data.code === 11000) {\r\n        throw new Error(\"this email already exist\");\r\n      }\r\n    });\r\n    console.log(\"createftch\", response);\r\n    return response;\r\n  } catch (error) {\r\n    console.log(\"createftcherr\", error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateProfile = async (profile, userToken) => {\r\n  const { password, fname = \"my defaultName\", lname } = profile;\r\n  try {\r\n    console.log(\"response\", profile);\r\n    const response = await axios({\r\n      method: \"patch\",\r\n      url: \"/users/me\",\r\n      data: {\r\n        fname,\r\n        lname,\r\n        password,\r\n      },\r\n      headers: {\r\n        Authorization: userToken,\r\n      },\r\n    });\r\n    console.log(response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\" client error\");\r\n  }\r\n};\r\n\r\n/****catagories */\r\nexport const getCatagories = async (userToken) => {\r\n  try {\r\n    const response = await axios({\r\n      method: \"get\",\r\n      url: \"/catagories\",\r\n      headers: {\r\n        Authorization: userToken,\r\n      },\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const createCategory = async (userToken, category) => {\r\n  try {\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: \"/catagories\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json; charset=utf-8\",\r\n        Authorization: userToken,\r\n      },\r\n      data: category,\r\n    });\r\n    console.log(response);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\nexport const updateCategory = async (editCat, userToken) => {\r\n  const { _id, cat_name, videos } = editCat;\r\n  try {\r\n    console.log(\"response\", editCat);\r\n    const response = await axios({\r\n      method: \"patch\",\r\n      url: `/catagories/${_id}`,\r\n      data: {\r\n        cat_name,\r\n        videos,\r\n      },\r\n      headers: {\r\n        Authorization: userToken,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\" claint error\");\r\n  }\r\n};\r\n\r\nexport const deleteCategory = async (userToken, id) => {\r\n  try {\r\n    await axios.delete(`/catagories/${id}`, {\r\n      headers: {\r\n        Authorization: userToken,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error(\" exios claint error\" + error);\r\n  }\r\n};\r\n\r\nexport const createList = async (userToken, catagories) => {\r\n  try {\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: \"/catagories/list\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json; charset=utf-8\",\r\n        Authorization: userToken,\r\n      },\r\n      data: catagories,\r\n    });\r\n    console.log(response);\r\n    return response;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}